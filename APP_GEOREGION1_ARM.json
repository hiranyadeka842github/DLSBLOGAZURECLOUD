{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.2",
  "parameters": {
    "applicationName": {
      "type": "string",
      "defaultValue": "dslcompanydeka3030app1"
    },
    "siteLocation": {
      "type": "string",
      "defaultValue": "eastus"
    },
    "sku_tier": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "App Service Plan's pricing tier"
      },
      "allowedValues": [
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ]
    },
    "environments": {
      "defaultValue": [
        "UAT"
      ],
      "type": "array",
      "metadata": {
        "description": "Array with the names for the environment slots"
      }
    },
    "Deploy App Insights": {
      "type": "bool",
      "defaultValue": true
    },
    "Email Service": {
      "type": "string",
      "allowedValues": [
        "Not configured",
        "Mailgun",
        "Gmail",
        "SendGrid"
      ],
      "defaultValue": "Not configured"
    },
    "Email Username": {
      "type": "string",
      "defaultValue": ""
    },
    "Email Password": {
      "type": "string",
      "defaultValue": ""
    },
    "Email From Address": {
      "type": "string",
      "defaultValue": ""
    },
    "repoUrl": {
      "type": "string",
      "defaultValue": "https://github.com/hiranyadeka842github/DLSBLOGAZURECLOUD"
    },
    "branch": {
      "type": "string",
      "defaultValue": "master"
    },
    "laworkspace": {
      "type": "string",
      "defaultValue": "LA-WORSPACE-DSL",
      "metadata": {
        "description": "Log analytics workspace"
      }
    },
    "appServicePlanInstances": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "App Service Plan's instance count"
      },
      "maxValue": 2,
      "minValue": 1
    },
    "minimumCapacity": {
      "type": "Int",
      "defaultValue": 1,
      "metadata": {
        "description": "The minimum capacity.  Autoscale engine will ensure the instance count is at least this value."
      }
    },
    "maximumCapacity": {
      "type": "Int",
      "defaultValue": 2,
      "metadata": {
        "description": "The maximum capacity.  Autoscale engine will ensure the instance count is not greater than this value."
      }
    },
    "defaultCapacity": {
      "type": "Int",
      "defaultValue": 1,
      "metadata": {
        "description": "The default capacity.  Autoscale engine will preventively set the instance count to be this value if it can not find any metric data."
      }
    },
    "metricName": {
      "type": "string",
      "defaultValue": "CpuPercentage",
      "metadata": {
        "description": "The metric name."
      }
    },
    "metricThresholdToScaleOut": {
      "type": "Int",
      "defaultValue": 60,
      "metadata": {
        "description": "The metric upper threshold.  If the metric value is above this threshold then autoscale engine will initiate scale out action."
      }
    },
    "metricThresholdToScaleIn": {
      "type": "Int",
      "defaultValue": 20,
      "metadata": {
        "description": "The metric lower threshold.  If the metric value is below this threshold then autoscale engine will initiate scale in action."
      }
    },
    "changePercentScaleOut": {
      "type": "Int",
      "defaultValue": 20,
      "metadata": {
        "description": "The percentage to increase the instance count when autoscale engine is initiating scale out action."
      }
    },
    "changePercentScaleIn": {
      "type": "Int",
      "defaultValue": 10,
      "metadata": {
        "description": "The percentage to decrease the instance count when autoscale engine is initiating scale in action."
      }
    },
    "autoscaleEnabled": {
      "type": "Bool",
      "defaultValue": true,
      "metadata": {
        "description": "A boolean to indicate whether the autoscale policy is enabled or disabled."
      }
    },
    "cosmosactName": {
      "type": "string",
      "defaultValue": "dslcompanycosmosactdeka3030",
      "maxLength": 30,
      "metadata": {
        "description": "Cosmos DB account"
      }
    },
    "databaseName": {
      "type": "string",
      "defaultValue": "ghostdb",
      "metadata": {
        "description": "The Cosmos DB database name."
      }
    },
    "containerName": {
      "type": "string",
      "defaultValue": "Items",
      "metadata": {
        "description": "The Cosmos DB container name."
      }
    }
  },
  "variables": {
    "appInsightsName": "[concat(parameters('applicationName'), '-insights')]",
    "hostingPlanName": "[concat(parameters('applicationName'), '-plan')]",
    "sku": "[parameters('sku_tier')]",
    "subscriptionId": "[subscription().subscriptionId]",
    "rggroup": "[resourceGroup().name]",
    "cosmosAccountName": "[toLower(parameters('cosmosactName'))]",
    "websiteName": "[parameters('applicationName')]",
    "settingName": "[concat(toLower(variables('hostingPlanName')), '-setting')]",
    "targetResourceId": "[resourceId('Microsoft.Web/serverFarms/', variables('hostingPlanName'))]"
  },
  "resources": [
    {
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('siteLocation')]",
      "apiVersion": "2018-02-01",
      "sku": {
        "name": "[variables('sku')]"
      },
      "dependsOn": [],
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "numberOfWorkers": 1
      }
    },
    {
      "name": "[parameters('applicationName')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('siteLocation')]",
      "apiVersion": "2018-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName')))]": "Resource",
        "displayName": "[parameters('applicationName')]"
      },
      "properties": {
        "name": "[parameters('applicationName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2018-11-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('applicationName'))]"
          ],
          "properties": {
            "use32BitWorkerProcess": false,
            "httpsOnly": true,
            "alwaysOn": true
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2018-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('applicationName'))]",
            "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
          ],
          "properties": {
            "url": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('applicationName'))).hostNames[0])]",
            "mail__transport": "SMTP",
            "mail__options__service": "[parameters('Email Service')]",
            "mail__options__auth__user": "[parameters('Email Username')]",
            "mail__options__auth__pass": "[parameters('Email Password')]",
            "mail__from": "[parameters('Email From Address')]",
            "WEBSITE_NODE_DEFAULT_VERSION": "~10",
            "NODE_ENV": "production",
            "APPINSIGHTS_INSTRUMENTATION_KEY": "[reference(concat('Microsoft.Insights/components/', variables('appInsightsName'))).InstrumentationKey]"
          }
        },
        {
          "name": "web",
          "type": "sourcecontrols",
          "apiVersion": "2018-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('applicationName'))]",
            "[resourceId('Microsoft.Web/sites/config', parameters('applicationName'), 'appsettings')]"
          ],
          "properties": {
            "repoUrl": "[parameters('repoUrl')]",
            "branch": "[parameters('branch')]",
            "isManualIntegration": true,
            "deploymentRollbackEnabled": true
          }
        }
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[parameters('laworkspace')]",
      "location": "[parameters('siteLocation')]",
      "properties": {}
    },
    {
      "name": "[variables('appInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[parameters('siteLocation')]",
      "apiVersion": "2020-02-02",
      "condition": "[parameters('Deploy App Insights')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('applicationName'))]"
      ],
      "tags": {
        "displayName": "[variables('appInsightsName')]"
      },
      "properties": {
        "ApplicationId": "[resourceId('Microsoft.Web/sites', parameters('applicationName'))]",
        "Application_Type": "web",
        "WorkspaceResourceId": "[concat('/subscriptions/', variables('subscriptionId'), '/resourcegroups/', variables('rggroup'), '/providers/microsoft.operationalinsights/workspaces/', parameters('laworkspace'))]"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-04-15",
      "name": "[variables('cosmosAccountName')]",
      "kind": "GlobalDocumentDB",
      "location": "[parameters('siteLocation')]",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "locationName": "[parameters('siteLocation')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "databaseAccountOfferType": "Standard"
      }
    },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Web/sites/slots",
      "name": "[concat(variables('websiteName'), '/', parameters('environments')[copyIndex()])]",
      "kind": "app",
      "location": "[parameters('siteLocation')]",
      "comments": "This specifies the web app slots.",
      "tags": {
        "displayName": "WebAppSlots"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', variables('websiteName'))]"
      ],
      "copy": {

        "name": "webPortalSlot",
        "count": "[length(parameters('environments'))]"
      }
    },
    {
      "type": "Microsoft.Insights/autoscalesettings",
      "name": "[variables('settingName')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      ],
      "apiVersion": "2014-04-01",
      "location": "[parameters('siteLocation')]",
      "properties": {
        "profiles": [
          {
            "name": "DefaultAutoscaleProfile",
            "capacity": {
              "minimum": "[parameters('minimumCapacity')]",
              "maximum": "[parameters('maximumCapacity')]",
              "default": "[parameters('defaultCapacity')]"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "[parameters('metricName')]",
                  "metricResourceUri": "[variables('targetResourceId')]",
                  "timeGrain": "PT5M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": "[parameters('metricThresholdToScaleOut')]"
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "PercentChangeCount",
                  "value": "[parameters('changePercentScaleOut')]",
                  "cooldown": "PT10M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "[parameters('metricName')]",
                  "metricResourceUri": "[variables('targetResourceId')]",
                  "timeGrain": "PT5M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": "[parameters('metricThresholdToScaleIn')]"
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "PercentChangeCount",
                  "value": "[parameters('changePercentScaleIn')]",
                  "cooldown": "PT10M"
                }
              }
            ]
          }
        ],
        "enabled": "[parameters('autoscaleEnabled')]",
        "targetResourceUri": "[variables('targetResourceId')]"
      }
    }
  ]
}
